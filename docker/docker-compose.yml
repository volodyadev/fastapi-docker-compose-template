version: '3.9'

networks:
  app_network:
    name: ${DOCKER_NETWORK}
    external: true

volumes:
  app_redis_data:
  postgres:
  minio:


services:
  fastapi:
    container_name: ${FASTAPI_CONTAINER_NAME}
    restart: unless-stopped
    build:
      context: ..
      target: production
      dockerfile: ./docker/Dockerfile
    image: backend:latest
    entrypoint: ./docker/docker-entrypoint.sh
    command: bash -c "python -m app"
    volumes:
      - ..:/app
    expose:
      - ${FASTAPI_PORT}
    ports:
      - ${FASTAPI_PORT}:${FASTAPI_PORT}
    networks:
      app_network:
        ipv4_address: ${FASTAPI_HOST}
    env_file:
      - ../.env
    depends_on:
      - redis

  redis:
    image: redis
    container_name: ${REDIS_CONTAINER_NAME}
    restart: unless-stopped
    volumes:
      - app_redis_data:/data
    networks:
      app_network:
        ipv4_address: ${REDIS_HOST}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server --requirepass ${REDIS_PASSWORD}

  postgres:
    image: postgres:latest
    container_name: ${POSTGRES_CONTAINER_NAME}
    user: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: UTC
    volumes:
      - postgres:/var/lib/postgresql/data
      - ../logs/postgres:/var/log
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    networks:
      app_network:
        ipv4_address: ${POSTGRES_HOST}
    expose:
      - "5432"

  minio:
    image: minio/minio
    container_name: ${MINIO_CONTAINER_NAME}
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    command: server --console-address :${MINIO_CONSOLE_PORT} /data
    volumes:
      - minio:/data
    ports:
      - ${MINIO_API_PORT}:${MINIO_API_PORT}
      - ${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}
    networks:
      app_network:
        ipv4_address: ${MINIO_HOST}

  nginx:
    image: nginx
    container_name: ${NGINX_CONTAINER_NAME}
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/cert:/etc/nginx/cert
      - ../logs/nginx:/var/log/nginx
    ports:
      - "443:443"
    networks:
      app_network:
        ipv4_address: ${NGINX_HOST}

    environment:
      BACKEND_HOST: ${FASTAPI_HOST}
      BACKEND_PORT: ${FASTAPI_PORT}
    restart: unless-stopped
